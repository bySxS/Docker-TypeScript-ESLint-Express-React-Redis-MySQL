version: '3.9'

services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data

  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: "123456789ss"
      MYSQL_USER: "sxs"
      MYSQL_PASSWORD: "123456789s"
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - mySqlData:/var/lib/mysql
      - ./mysql/import:/docker-entrypoint-initdb.d
    restart: always

  client:
    container_name: react_client
    build:
      context: ./client-react
    restart: always

  migrate:
    container_name: migrate_import_db
    build:
      context: ./server-express
    depends_on:
      - mysql
    restart: on-failure
    command: sh -c 'npm run migrate && npm run seedAdd'
    working_dir: /usr/src/app

  server:
    build:
      context: ./server-express
    restart: always
    depends_on:
      - mysql
    deploy:
      replicas: 3
      #     resources:
      #       limits:
      #         cpus: "0.1"
      #         memory: '50M'
      restart_policy:
        condition: on-failure
    command: sh -c 'npm run prod'
    working_dir: /usr/src/app

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./nginx-reverse-proxy
    volumes:
      - "./nginx-reverse-proxy/conf.d:/etc/nginx/conf.d"
      - "./nginx-reverse-proxy/certs:/etc/nginx/certs"
      - "./nginx-reverse-proxy/vhost.d:/etc/nginx/vhost.d"
      - "./nginx-reverse-proxy/www/html:/usr/share/nginx/html"
      - "./nginx-reverse-proxy/logs:/var/log/nginx"
    ports:
      - "80:80"
      - "443:443"

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: mysql

networks:
  default:
    name: net_react_express_nginx
volumes:
  mySqlData:
    driver: local
  cache:
    driver: local
